// <auto-generated />
using System;
using Infra.ConexaoBD;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240501202845_CriandoBancoDeDadosLaLiga")]
    partial class CriandoBancoDeDadosLaLiga
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dominio.Modelos.Estadio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AnoDeConstrucao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("FotoEstadio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TimeId");

                    b.ToTable("Estadios");
                });

            modelBuilder.Entity("Dominio.Modelos.Jogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalhes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Idade")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroDaCamisa")
                        .HasColumnType("int");

                    b.Property<int>("NumeroDeJogos")
                        .HasColumnType("int");

                    b.Property<int>("PernaBoa")
                        .HasColumnType("int");

                    b.Property<int>("Posicao")
                        .HasColumnType("int");

                    b.Property<int>("TimeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TimeId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("Dominio.Modelos.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstadioId")
                        .HasColumnType("int");

                    b.Property<int>("TimeLocalId")
                        .HasColumnType("int");

                    b.Property<int>("TimeVisitanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadioId");

                    b.HasIndex("TimeLocalId");

                    b.HasIndex("TimeVisitanteId");

                    b.ToTable("Jogos");
                });

            modelBuilder.Entity("Dominio.Modelos.Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AnoFundacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoEscudo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("Dominio.Modelos.Estadio", b =>
                {
                    b.HasOne("Dominio.Modelos.Time", "Time")
                        .WithMany("Estadios")
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Time");
                });

            modelBuilder.Entity("Dominio.Modelos.Jogador", b =>
                {
                    b.HasOne("Dominio.Modelos.Time", "Time")
                        .WithMany("Jogadores")
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Time");
                });

            modelBuilder.Entity("Dominio.Modelos.Jogo", b =>
                {
                    b.HasOne("Dominio.Modelos.Estadio", "Estadio")
                        .WithMany("EstadioJogo")
                        .HasForeignKey("EstadioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Modelos.Time", "TimeLocal")
                        .WithMany("JogosComoLocal")
                        .HasForeignKey("TimeLocalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Dominio.Modelos.Time", "TimeVisitante")
                        .WithMany("JogosComoVisitante")
                        .HasForeignKey("TimeVisitanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estadio");

                    b.Navigation("TimeLocal");

                    b.Navigation("TimeVisitante");
                });

            modelBuilder.Entity("Dominio.Modelos.Estadio", b =>
                {
                    b.Navigation("EstadioJogo");
                });

            modelBuilder.Entity("Dominio.Modelos.Time", b =>
                {
                    b.Navigation("Estadios");

                    b.Navigation("Jogadores");

                    b.Navigation("JogosComoLocal");

                    b.Navigation("JogosComoVisitante");
                });
#pragma warning restore 612, 618
        }
    }
}
